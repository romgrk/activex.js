!_TAG_FILE_SORTED	2	/0=unsorted, 1=sorted, 2=foldcase/
addGroup	/mnt/hgfs/gregoirr/scripts/repository.js	/^  Repository.prototype.addGroup = function(name, keys) {$/;"	m	class:Repository
addKey	/mnt/hgfs/gregoirr/scripts/repository.js	/^  Group.prototype.addKey = function(key) {$/;"	m	class:Group
appendFile	/mnt/hgfs/gregoirr/scripts/jscript.js	/^function appendFile(path, content){$/;"	f
Array	/mnt/hgfs/gregoirr/scripts/array.js	/^Array.prototype.forEach = function(callback) {$/;"	c
asArray	/mnt/hgfs/gregoirr/scripts/x2js.js	/^  this.asArray = function(prop) {$/;"	m	class:X2JS
asDateTime	/mnt/hgfs/gregoirr/scripts/x2js.js	/^  this.asDateTime = function(prop) {$/;"	m	class:X2JS
assert	/mnt/hgfs/gregoirr/scripts/test.js	/^function assert(expression, message) {$/;"	f
atob	/mnt/hgfs/gregoirr/scripts/jscript.js	/^function atob(text) {$/;"	f
binaryToString	/mnt/hgfs/gregoirr/scripts/jscript.js	/^function binaryToString(binary) {$/;"	f
btoa	/mnt/hgfs/gregoirr/scripts/jscript.js	/^function btoa(binary) {$/;"	f
c	/mnt/hgfs/gregoirr/scripts/jscript.js	/^  var c = function (n) {$/;"	f	function:debug
CDATA_SECTION_NODE	/mnt/hgfs/gregoirr/scripts/x2js.js	/^    CDATA_SECTION_NODE : 4,$/;"	p	class:X2JS.DOMNodeTypes
change_password	/mnt/hgfs/gregoirr/scripts/cotg.js	/^function change_password(beta, StoreID, UserID, OldPassword, NewPassword) {$/;"	f
checkFromXmlDateTimePaths	/mnt/hgfs/gregoirr/scripts/x2js.js	/^  function checkFromXmlDateTimePaths(value, childName, fullPath) {$/;"	f	function:X2JS
checkInStdFiltersArrayForm	/mnt/hgfs/gregoirr/scripts/x2js.js	/^  function checkInStdFiltersArrayForm(stdFiltersArrayForm, obj, name, path) {$/;"	f	function:X2JS
checkJsonObjPropertiesFilter	/mnt/hgfs/gregoirr/scripts/x2js.js	/^  function checkJsonObjPropertiesFilter(jsonObj, propertyName, jsonObjPath) {$/;"	f	function:X2JS
checkXmlElementsFilter	/mnt/hgfs/gregoirr/scripts/x2js.js	/^  function checkXmlElementsFilter(obj, childType, childName, childPath) {$/;"	f	function:X2JS
clear	/mnt/hgfs/gregoirr/scripts/repository.js	/^  Group.prototype.clear = function() {$/;"	m	class:Group
clear	/mnt/hgfs/gregoirr/scripts/repository.js	/^  Repository.prototype.clear = function() {$/;"	m	class:Repository
COMMENT_NODE	/mnt/hgfs/gregoirr/scripts/x2js.js	/^    COMMENT_NODE     : 8,$/;"	p	class:X2JS.DOMNodeTypes
contains	/mnt/hgfs/gregoirr/scripts/array.js	/^Array.prototype.contains = function(value) {$/;"	m	class:Array
createFolder	/mnt/hgfs/gregoirr/scripts/jscript.js	/^function createFolder (name) {$/;"	f
debug	/mnt/hgfs/gregoirr/scripts/jscript.js	/^function debug(msg, indent) {$/;"	f
deleteFile	/mnt/hgfs/gregoirr/scripts/jscript.js	/^function deleteFile(path, force){$/;"	f
delete_document	/mnt/hgfs/gregoirr/scripts/cotg.js	/^function delete_document(beta, StoreID, Password, DocumentID) {$/;"	f
DOCUMENT_NODE	/mnt/hgfs/gregoirr/scripts/x2js.js	/^    DOCUMENT_NODE      : 9$/;"	p	class:X2JS.DOMNodeTypes
DOMNodeTypes	/mnt/hgfs/gregoirr/scripts/x2js.js	/^  var DOMNodeTypes = {$/;"	c	class:X2JS
ELEMENT_NODE	/mnt/hgfs/gregoirr/scripts/x2js.js	/^    ELEMENT_NODE     : 1,$/;"	p	class:X2JS.DOMNodeTypes
endsWith	/mnt/hgfs/gregoirr/scripts/x2js.js	/^  function endsWith(str, suffix) {$/;"	f	function:X2JS
endTag	/mnt/hgfs/gregoirr/scripts/x2js.js	/^  function endTag(jsonObj,elementName) {$/;"	f	function:X2JS
err	/mnt/hgfs/gregoirr/scripts/jscript.js	/^  function err(msg) { Watch.log(toString(msg), 1); }$/;"	f
err	/mnt/hgfs/gregoirr/scripts/repository.js	/^err = function (msg) { Watch.log(toString(msg), 1); }$/;"	f
err	/mnt/hgfs/gregoirr/scripts/repository.js	/^var get, set, log, err, exp;$/;"	v
err	/mnt/hgfs/gregoirr/scripts/require.js	/^  err = function (msg) { Watch.log(toString(msg), 1); }$/;"	f
err	/mnt/hgfs/gregoirr/scripts/require.js	/^var get, set, log, err, exp;$/;"	v
escapeXml	/mnt/hgfs/gregoirr/scripts/jscript.js	/^function escapeXml(unsafe) {$/;"	f
escapeXmlChars	/mnt/hgfs/gregoirr/scripts/x2js.js	/^  function escapeXmlChars(str) {$/;"	f	function:X2JS
exp	/mnt/hgfs/gregoirr/scripts/jscript.js	/^  function exp(string) { return Watch.expandString(string); }$/;"	f
exp	/mnt/hgfs/gregoirr/scripts/repository.js	/^exp = function (string) { return Watch.expandString(string); }$/;"	f
exp	/mnt/hgfs/gregoirr/scripts/repository.js	/^var get, set, log, err, exp;$/;"	v
exp	/mnt/hgfs/gregoirr/scripts/require.js	/^  exp = function (string) { return Watch.expandString(string); }$/;"	f
exp	/mnt/hgfs/gregoirr/scripts/require.js	/^var get, set, log, err, exp;$/;"	v
exports	/mnt/hgfs/gregoirr/scripts/path.js	/^module.exports = {$/;"	c	class:module
exports	/mnt/hgfs/gregoirr/scripts/require.js	/^  var module = { exports: {} }$/;"	p	class:require.module
fileContains	/mnt/hgfs/gregoirr/scripts/jscript.js	/^function fileContains(file, s) {$/;"	f
fileStartsWith	/mnt/hgfs/gregoirr/scripts/jscript.js	/^function fileStartsWith(file, s) {$/;"	f
filter	/mnt/hgfs/gregoirr/scripts/array.js	/^Array.prototype.filter = function(predicate) {$/;"	m	class:Array
filter	/mnt/hgfs/gregoirr/scripts/jscript.js	/^function filter(array, predicate) {$/;"	f
find	/mnt/hgfs/gregoirr/scripts/repository.js	/^  Group.prototype.find = function(description) {$/;"	m	class:Group
findAll	/mnt/hgfs/gregoirr/scripts/repository.js	/^  Group.prototype.findAll = function(description) {$/;"	m	class:Group
fn	/mnt/hgfs/gregoirr/scripts/maybe.js	/^Maybe.fn = function(value) {$/;"	c	class:Maybe
forEach	/mnt/hgfs/gregoirr/scripts/array.js	/^Array.prototype.forEach = function(callback) {$/;"	m	class:Array
forEach	/mnt/hgfs/gregoirr/scripts/jscript.js	/^function forEach(array, callback) {$/;"	f
fromXmlDateTime	/mnt/hgfs/gregoirr/scripts/x2js.js	/^  function fromXmlDateTime(prop) {$/;"	f	function:X2JS
get	/mnt/hgfs/gregoirr/scripts/jscript.js	/^  function get(name) { return Watch.getVariable(name); }$/;"	f
get	/mnt/hgfs/gregoirr/scripts/repository.js	/^get = function (name) { return Watch.getVariable(name); }$/;"	f
get	/mnt/hgfs/gregoirr/scripts/repository.js	/^var get, set, log, err, exp;$/;"	v
get	/mnt/hgfs/gregoirr/scripts/require.js	/^  get = function (name) { return Watch.getVariable(name); }$/;"	f
get	/mnt/hgfs/gregoirr/scripts/require.js	/^var get, set, log, err, exp;$/;"	v
getGroup	/mnt/hgfs/gregoirr/scripts/repository.js	/^  Repository.prototype.getGroup = function(name) {$/;"	m	class:Repository
getJsonPropertyPath	/mnt/hgfs/gregoirr/scripts/x2js.js	/^  function getJsonPropertyPath(jsonObjPath, jsonPropName) {$/;"	f	function:X2JS
getNodeLocalName	/mnt/hgfs/gregoirr/scripts/x2js.js	/^  function getNodeLocalName( node ) {$/;"	f	function:X2JS
getNodePrefix	/mnt/hgfs/gregoirr/scripts/x2js.js	/^  function getNodePrefix(node) {$/;"	f	function:X2JS
Group	/mnt/hgfs/gregoirr/scripts/repository.js	/^  function Group(name) {$/;"	c
httpGET	/mnt/hgfs/gregoirr/scripts/cotg.js	/^function httpGET(url, data) {$/;"	f
httpGET	/mnt/hgfs/gregoirr/scripts/jscript.js	/^function httpGET(url, data) {$/;"	f
httpPOST	/mnt/hgfs/gregoirr/scripts/cotg.js	/^function httpPOST(url, data) {$/;"	f
httpPOST	/mnt/hgfs/gregoirr/scripts/jscript.js	/^function httpPOST(url, data) {$/;"	f
initConfigDefaults	/mnt/hgfs/gregoirr/scripts/x2js.js	/^  function initConfigDefaults() {$/;"	f	function:X2JS
insert	/mnt/hgfs/gregoirr/scripts/repository.js	/^  Group.prototype.insert = function(keySet) {$/;"	m	class:Group
join	/mnt/hgfs/gregoirr/scripts/path.js	/^  join: function () {},$/;"	m	class:module.exports
json2xml	/mnt/hgfs/gregoirr/scripts/x2js.js	/^  this.json2xml = function (jsonObj) {$/;"	m	class:X2JS
json2xml_str	/mnt/hgfs/gregoirr/scripts/x2js.js	/^  this.json2xml_str = function (jsonObj) {$/;"	m	class:X2JS
jsonXmlElemCount	/mnt/hgfs/gregoirr/scripts/x2js.js	/^  function jsonXmlElemCount ( jsonObj ) {$/;"	f	function:X2JS
jsonXmlSpecialElem	/mnt/hgfs/gregoirr/scripts/x2js.js	/^  function jsonXmlSpecialElem ( jsonObj, jsonObjField ) {$/;"	f	function:X2JS
Just	/mnt/hgfs/gregoirr/scripts/maybe.js	/^function Just(value) {$/;"	f
listFiles	/mnt/hgfs/gregoirr/scripts/jscript.js	/^function listFiles(path) {$/;"	f
listFolders	/mnt/hgfs/gregoirr/scripts/jscript.js	/^function listFolders(path) {$/;"	f
listGroups	/mnt/hgfs/gregoirr/scripts/repository.js	/^  Repository.prototype.listGroups = function() {$/;"	m	class:Repository
listKeys	/mnt/hgfs/gregoirr/scripts/repository.js	/^  Group.prototype.listKeys = function() {$/;"	m	class:Group
loadMeta	/mnt/hgfs/gregoirr/scripts/jscript.js	/^function loadMeta() {$/;"	f
log	/mnt/hgfs/gregoirr/scripts/jscript.js	/^  function log(msg) { Watch.log(toString(msg), 2); }$/;"	f
log	/mnt/hgfs/gregoirr/scripts/repository.js	/^log = function (msg) { Watch.log(toString(msg), 2); }$/;"	f
log	/mnt/hgfs/gregoirr/scripts/repository.js	/^var get, set, log, err, exp;$/;"	v
log	/mnt/hgfs/gregoirr/scripts/require.js	/^  log = function (msg) { Watch.log(toString(msg), 2); }$/;"	f
log	/mnt/hgfs/gregoirr/scripts/require.js	/^var get, set, log, err, exp;$/;"	v
map	/mnt/hgfs/gregoirr/scripts/array.js	/^Array.prototype.map = function(callback) {$/;"	m	class:Array
map	/mnt/hgfs/gregoirr/scripts/jscript.js	/^function map(array, callback) {$/;"	f
map	/mnt/hgfs/gregoirr/scripts/maybe.js	/^Maybe.fn.prototype.map = function(f) {$/;"	m	class:Maybe.fn
Maybe	/mnt/hgfs/gregoirr/scripts/maybe.js	/^function Maybe(value) {$/;"	f
message	/mnt/hgfs/gregoirr/scripts/cotg.js	/^      res = {response:false, message:"A password change request to the Apollo server failed. The/;"	p	class:res
message	/mnt/hgfs/gregoirr/scripts/cotg.js	/^      res = {response:false, message:"Could not delete the document: " + response_node.text};$/;"	p	class:res
message	/mnt/hgfs/gregoirr/scripts/cotg.js	/^      res = {response:true, message:"The document was deleted correctly."};$/;"	p	class:res
message	/mnt/hgfs/gregoirr/scripts/cotg.js	/^      res = {response:true, message:"The password was changed successfully on the server."};$/;"	p	class:res
message	/mnt/hgfs/gregoirr/scripts/cotg.js	/^    res = {response:false, message:"There was an error parsing a Change Password request to the /;"	p	class:res
message	/mnt/hgfs/gregoirr/scripts/cotg.js	/^    res = {response:false, message:"There was an error parsing the response from the COTG Server/;"	p	class:res
message	/mnt/hgfs/gregoirr/scripts/cotg.js	/^  var res = {response:false, message:"Something went wrong, this function did not properly set t/;"	p	class:change_password.res
message	/mnt/hgfs/gregoirr/scripts/cotg.js	/^  var res = {response:false, message:"Something went wrong, this function did not properly set t/;"	p	class:delete_document.res
metacollectionToJS	/mnt/hgfs/gregoirr/scripts/jscript.js	/^function metacollectionToJS(collection) {$/;"	f
metalistToJS	/mnt/hgfs/gregoirr/scripts/jscript.js	/^function metalistToJS(list) {$/;"	f
metanodeToJS	/mnt/hgfs/gregoirr/scripts/jscript.js	/^function metanodeToJS(node) {$/;"	f
module	/mnt/hgfs/gregoirr/scripts/require.js	/^  var module = { exports: {} }$/;"	c	class:require
name	/mnt/hgfs/gregoirr/scripts/path.js	/^  name: 'path'$/;"	p	class:module.exports
Nothing	/mnt/hgfs/gregoirr/scripts/maybe.js	/^function Nothing() {$/;"	f
object	/mnt/hgfs/gregoirr/scripts/jscript.js	/^  var object = {$/;"	c	class:metanodeToJS
orElse	/mnt/hgfs/gregoirr/scripts/maybe.js	/^Maybe.fn.prototype.orElse = function(value) {$/;"	m	class:Maybe.fn
parseDOMChildren	/mnt/hgfs/gregoirr/scripts/x2js.js	/^  function parseDOMChildren( node, path ) {$/;"	f	function:X2JS
parseJSONArray	/mnt/hgfs/gregoirr/scripts/x2js.js	/^  function parseJSONArray ( jsonArrRoot, jsonArrObj, attrList, jsonObjPath ) {$/;"	f	function:X2JS
parseJSONAttributes	/mnt/hgfs/gregoirr/scripts/x2js.js	/^  function parseJSONAttributes ( jsonObj ) {$/;"	f	function:X2JS
parseJSONObject	/mnt/hgfs/gregoirr/scripts/x2js.js	/^  function parseJSONObject ( jsonObj, jsonObjPath ) {$/;"	f	function:X2JS
parseJSONTextAttrs	/mnt/hgfs/gregoirr/scripts/x2js.js	/^  function parseJSONTextAttrs ( jsonTxtObj ) {$/;"	f	function:X2JS
parseJSONTextObject	/mnt/hgfs/gregoirr/scripts/x2js.js	/^  function parseJSONTextObject ( jsonTxtObj ) {$/;"	f	function:X2JS
parseXmlString	/mnt/hgfs/gregoirr/scripts/x2js.js	/^  this.parseXmlString = function(xmlDocStr) {$/;"	m	class:X2JS
query	/mnt/hgfs/gregoirr/scripts/repository.js	/^  Group.prototype.query = function(where) {$/;"	m	class:Group
queryString	/mnt/hgfs/gregoirr/scripts/cotg.js	/^function queryString(params) {$/;"	f
queryString	/mnt/hgfs/gregoirr/scripts/repository.js	/^  function queryString(description) {$/;"	f
readBinaryFile	/mnt/hgfs/gregoirr/scripts/jscript.js	/^function readBinaryFile(path) {$/;"	f
readFile	/mnt/hgfs/gregoirr/scripts/jscript.js	/^function readFile(path){$/;"	f
readFile	/mnt/hgfs/gregoirr/scripts/require.js	/^function readFile(path){$/;"	f
reduce	/mnt/hgfs/gregoirr/scripts/array.js	/^Array.prototype.reduce = function(callback, accumulator) {$/;"	m	class:Array
reduce	/mnt/hgfs/gregoirr/scripts/jscript.js	/^function reduce(array, callback, accumulator) {$/;"	f
remove	/mnt/hgfs/gregoirr/scripts/repository.js	/^  Group.prototype.remove = function(description) {$/;"	m	class:Group
removeGroup	/mnt/hgfs/gregoirr/scripts/repository.js	/^  Repository.prototype.removeGroup = function(group) {$/;"	m	class:Repository
removeKey	/mnt/hgfs/gregoirr/scripts/repository.js	/^  Group.prototype.removeKey = function(key) {$/;"	m	class:Group
renameGroup	/mnt/hgfs/gregoirr/scripts/repository.js	/^  Repository.prototype.renameGroup = function(name, newName) {$/;"	m	class:Repository
repo	/mnt/hgfs/gregoirr/scripts/repository.js	/^var repo  = getRepository()$/;"	v
Repository	/mnt/hgfs/gregoirr/scripts/repository.js	/^  function Repository() {$/;"	c
require	/mnt/hgfs/gregoirr/scripts/require.js	/^function require(path) {$/;"	f
res	/mnt/hgfs/gregoirr/scripts/cotg.js	/^      res = {response:false, message:"A password change request to the Apollo server failed. The/;"	c
res	/mnt/hgfs/gregoirr/scripts/cotg.js	/^      res = {response:false, message:"Could not delete the document: " + response_node.text};$/;"	c
res	/mnt/hgfs/gregoirr/scripts/cotg.js	/^      res = {response:true, message:"The document was deleted correctly."};$/;"	c
res	/mnt/hgfs/gregoirr/scripts/cotg.js	/^      res = {response:true, message:"The password was changed successfully on the server."};$/;"	c
res	/mnt/hgfs/gregoirr/scripts/cotg.js	/^    res = {response:false, message:"There was an error parsing a Change Password request to the /;"	c
res	/mnt/hgfs/gregoirr/scripts/cotg.js	/^    res = {response:false, message:"There was an error parsing the response from the COTG Server/;"	c
res	/mnt/hgfs/gregoirr/scripts/cotg.js	/^  var res = {response:false, message:"Something went wrong, this function did not properly set t/;"	c	class:change_password
res	/mnt/hgfs/gregoirr/scripts/cotg.js	/^  var res = {response:false, message:"Something went wrong, this function did not properly set t/;"	c	class:delete_document
response	/mnt/hgfs/gregoirr/scripts/cotg.js	/^      res = {response:false, message:"A password change request to the Apollo server failed. The/;"	p	class:res
response	/mnt/hgfs/gregoirr/scripts/cotg.js	/^      res = {response:false, message:"Could not delete the document: " + response_node.text};$/;"	p	class:res
response	/mnt/hgfs/gregoirr/scripts/cotg.js	/^      res = {response:true, message:"The document was deleted correctly."};$/;"	p	class:res
response	/mnt/hgfs/gregoirr/scripts/cotg.js	/^      res = {response:true, message:"The password was changed successfully on the server."};$/;"	p	class:res
response	/mnt/hgfs/gregoirr/scripts/cotg.js	/^    res = {response:false, message:"There was an error parsing a Change Password request to the /;"	p	class:res
response	/mnt/hgfs/gregoirr/scripts/cotg.js	/^    res = {response:false, message:"There was an error parsing the response from the COTG Server/;"	p	class:res
response	/mnt/hgfs/gregoirr/scripts/cotg.js	/^  var res = {response:false, message:"Something went wrong, this function did not properly set t/;"	p	class:change_password.res
response	/mnt/hgfs/gregoirr/scripts/cotg.js	/^  var res = {response:false, message:"Something went wrong, this function did not properly set t/;"	p	class:delete_document.res
saveMeta	/mnt/hgfs/gregoirr/scripts/jscript.js	/^function saveMeta(meta) {$/;"	f
saveMetaAsXML	/mnt/hgfs/gregoirr/scripts/jscript.js	/^function saveMetaAsXML(meta, path) {$/;"	f
send_document_metadata	/mnt/hgfs/gregoirr/scripts/cotg.js	/^function send_document_metadata(StoreID, Password, FileURL, Title, Author, Description, Category/;"	f
set	/mnt/hgfs/gregoirr/scripts/jscript.js	/^  function set(name, value) { Watch.setVariable(name, value); }$/;"	f
set	/mnt/hgfs/gregoirr/scripts/repository.js	/^set = function (name, value) { Watch.setVariable(name, value); }$/;"	f
set	/mnt/hgfs/gregoirr/scripts/repository.js	/^var get, set, log, err, exp;$/;"	v
set	/mnt/hgfs/gregoirr/scripts/require.js	/^  set = function (name, value) { Watch.setVariable(name, value); }$/;"	f
set	/mnt/hgfs/gregoirr/scripts/require.js	/^var get, set, log, err, exp;$/;"	v
startTag	/mnt/hgfs/gregoirr/scripts/x2js.js	/^  function startTag(jsonObj, element, attrList, closed) {$/;"	f	function:X2JS
test	/mnt/hgfs/gregoirr/scripts/test.js	/^function test(what, callback) {$/;"	f
TEXT_NODE	/mnt/hgfs/gregoirr/scripts/x2js.js	/^    TEXT_NODE        : 3,$/;"	p	class:X2JS.DOMNodeTypes
toArrayAccessForm	/mnt/hgfs/gregoirr/scripts/x2js.js	/^  function toArrayAccessForm(obj, childName, path) {$/;"	f	function:X2JS
toString	/mnt/hgfs/gregoirr/scripts/jscript.js	/^function toString(value) {$/;"	f
toString	/mnt/hgfs/gregoirr/scripts/repository.js	/^function toString(value) {$/;"	f
toString	/mnt/hgfs/gregoirr/scripts/require.js	/^function toString(value) {$/;"	f
toString	/mnt/hgfs/gregoirr/scripts/x2js.js	/^        result.toString = function() {$/;"	f	function:result
toXmlDateTime	/mnt/hgfs/gregoirr/scripts/x2js.js	/^  this.toXmlDateTime = function(dt) {$/;"	m	class:X2JS
unescapeXml	/mnt/hgfs/gregoirr/scripts/jscript.js	/^function unescapeXml(safe) {$/;"	f
unescapeXmlChars	/mnt/hgfs/gregoirr/scripts/x2js.js	/^  function unescapeXmlChars(str) {$/;"	f	function:X2JS
update	/mnt/hgfs/gregoirr/scripts/repository.js	/^  Group.prototype.update = function(keySet) {$/;"	m	class:Group
users	/mnt/hgfs/gregoirr/scripts/repository.js	/^var users = repo.addGroup('users', ['firstName', 'lastName', 'email'])$/;"	v
writeBinaryFile	/mnt/hgfs/gregoirr/scripts/jscript.js	/^function writeBinaryFile(path, content) {$/;"	f
writeBinaryTextToFile	/mnt/hgfs/gregoirr/scripts/jscript.js	/^function writeBinaryTextToFile(path, content) {$/;"	f
writeDecodedBase64	/mnt/hgfs/gregoirr/scripts/jscript.js	/^function writeDecodedBase64(text, to) {$/;"	f
writeFile	/mnt/hgfs/gregoirr/scripts/jscript.js	/^function writeFile(path, content){$/;"	f
X2JS	/mnt/hgfs/gregoirr/scripts/x2js.js	/^function X2JS(config) {$/;"	c
xml	/mnt/hgfs/gregoirr/scripts/jscript.js	/^  function xml(string) { return Watch.expandString("xmlget('" + string "',Value,KeepCase,No Trim/;"	f
xml2json	/mnt/hgfs/gregoirr/scripts/x2js.js	/^  this.xml2json = function (xmlDoc) {$/;"	m	class:X2JS
xml_str2json	/mnt/hgfs/gregoirr/scripts/x2js.js	/^  this.xml_str2json = function (xmlDocStr) {$/;"	m	class:X2JS
_updateKeys	/mnt/hgfs/gregoirr/scripts/repository.js	/^  Group.prototype._updateKeys = function(description) {$/;"	m	class:Group
__node__	/mnt/hgfs/gregoirr/scripts/jscript.js	/^    __node__: node$/;"	p	class:metanodeToJS.object
